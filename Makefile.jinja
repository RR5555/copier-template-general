.DEFAULT_GOAL := help
IMG_NAME ?= '{{img_name}}'


{% if docker_type == ['cpu'] or docker_type == ['gpu'] %}
###### Docker ######


docker-build: ## Build the Docker container
	docker build -t $(IMG_NAME) -f ./Docker/Dockerfile .


docker-run: ## Run the Docker container
	docker run --rm -it -v .:. \
	--name $(IMG_NAME) $(IMG_NAME)


docker-bash: ## Access container bash
	docker exec -it $(IMG_NAME) /bin/bash

{% endif %}

{% if docker_type == ['cpu','gpu'] %}
###### Docker ######


docker-build: ## Build the Docker container
	docker build -t $(IMG_NAME) -f ./Docker/vanilla/Dockerfile .


docker-run: ## Run the Docker container
	docker run --rm -it -v .:. \
	--name $(IMG_NAME) $(IMG_NAME)


docker-bash: ## Access container bash
	docker exec -it $(IMG_NAME) /bin/bash



docker-build-gpu: ## Build the Docker container [gpu]
	docker build -t $(IMG_NAME)-gpu -f ./Docker/gpu/Dockerfile .


docker-run-gpu: ## Run the Docker container [gpu]
	docker run --rm -it -v .:. \
	--name $(IMG_NAME)-gpu $(IMG_NAME)-gpu


docker-bash-gpu: ## Access container bash [gpu]
	docker exec -it $(IMG_NAME)-gpu /bin/bash

{% endif %}


###### Project ######

dev-install: ## uv sync
	uv sync --all-groups

lint: ## Run linter [dev]
	uv run ruff check .

format: ## Run formatter [dev]
	uv run ruff format --diff .

tox-rerun: ## Launch Tox [dev, tox]
	uv run tox --parallel

tox-run: ## Launch Tox [dev, tox]
	uv run tox -r --parallel

pre-commit: ## Run pre-commit
	uv run pre-commit run --all-files --show-diff-on-failure

pre-commit-enforce: ## Install the pre-commit as a git hook (you can just run pre-commit without doing that by: `make pre-commit`)
	uv run pre-commit install

update-pre-commit-hooks: ## Update automatically the hooks for `pre-commit`
	uv run pre-commit autoupdate




###### Help ######

# https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html
.PHONY: help

help:
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

